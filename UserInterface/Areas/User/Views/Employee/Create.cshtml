@model ObjectBusinessLayer.Employee

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <link href="~/Content/employeeimage.css" rel="stylesheet" />
</head>

<h2>Create</h2>

@Html.Partial("_Display_Error_Msg")
@*@if (TempData["SuccessMsg"] != null)
{

    <div class="alert alert-success alert-dismissible show">
        <strong>Success!</strong> @TempData["SuccessMsg"].ToString();
        <button type="button" class="close" data-dismiss="alert">&times;</button>
    </div>

}
@if (TempData["ErrorMsg"] != null)
{
   
    <div class="alert alert-warning alert-dismissible show">
        <strong>Warning!</strong> @TempData["ErrorMsg"].ToString();
        <button type="button" class="close" data-dismiss="alert">&times;</button>
    </div>

}*@



@using (Html.BeginForm("Create", "Employee", new { area = "User" }, FormMethod.Post,new {@class="form-horizontal",enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="employee-image">
                    <input type="file" id="InputUploadFile" name="Uploadedinputfile" accept="image/*" class="hidden" />
                    <img src="~/images/no-image.jpg" id="UploadImage"  class="img-responsive" />
                    <div class="upload-photo">
                        <img src="~/images/no-image.jpg" class="img-responsive" />
                    </div>
                    <div class="remove-photo">
                        <span class="glyphicon glyphicon-remove"></span>
                    </div>

                </div>
                <p class="description"></p>
            </div>
            <div class="col-md-8">
                <div class="form-horizontal">
                    <h4>Create Employee</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Office, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Office, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Office, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PF, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PF, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PF, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">

                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.Gender, "Male", new { @name = "gender", @class = "" })
                                Male:
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.Gender, "Female", new { @name = "gender", @class = "" })
                                Female:
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">
                            City:
                        </label>
                        <div class="col-md-10">
                            @*  @Html.DropDownList("ddlcity", new SelectList(new SelectListItem { Text = "0", Value = "Mumbai" }));
                @Html.DropDownListFor(model => model.CityId, ViewBag.citydata as SelectList, "---Select City---", new { @class = "form-control" })*@
                           
                            @Html.DropDownListFor(model => model.CityId, Model.CityList as SelectList, "---Select City---", new { @class = "form-control" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>

        </div>

    </div>


    }





