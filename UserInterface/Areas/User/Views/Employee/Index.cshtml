@model IEnumerable<ObjectBusinessLayer.Employee>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
@Html.Partial("_Display_Error_Msg")

@using (Html.BeginForm("Index", "Employee", new { area = "User" }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
 
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-12">
                <div class="col-md-3">
                    @Html.Editor("searchtext", new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="col-md-2">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div>
            </div>




        </div>
    </div>
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @* @Html.DisplayNameFor(model => model.Name)*@
            @Html.ActionLink("Name", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "Name", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })
        </th>
        <th>
            @Html.ActionLink("Position", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "Position", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })
        </th>
        <th>
            @Html.ActionLink("Office", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "Office", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })

        </th>
        <th>
            @Html.ActionLink("Age", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "Age", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })


        </th>
        <th>
            @Html.ActionLink("Salary", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "Salary", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })


        </th>
        <th>
            @Html.ActionLink("PF", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "PF", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })


        </th>
        <th>
            @Html.ActionLink("Entrydate", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "Entrydate", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })

        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Office)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Salary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PF)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Entrydate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.EmployeeID }) |

                @*  @Html.ActionLink("Delete", "Delete", new { id = item.EmployeeID })*@
                <a class='btn btn-danger btn-sm' style='margin-left:5px' onclick=Delete("@item.EmployeeID")><i class='fa fa-trash'></i> Delete</a>

            </td>

        </tr>
    }

</table>
<p id="post"></p>
<div>
    @{
        if (ViewBag.totalpage != null)
        {
            double totalpages = ViewBag.totalpage;
            if (totalpages > 1)
            {
                <ul class="pagination">
                    @if (ViewBag.PageNumber == 1)
                    {
                        <li>
                            @Html.ActionLink("Preveous", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "Name" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber })

                        </li>
                    }
                    else
                    {
                        <li>
                            @Html.ActionLink("Preveous", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "Name" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber - 1 })

                        </li>

                    }


                    @for (int i = 1; i < totalpages; i++)
                    {
                        if (i == ViewBag.PageNumber)
                        {
                            <li class="active">
                                @Html.ActionLink(i.ToString(), "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "Name" : ViewBag.SortBy, PageNumber = i })
                            </li>

                        }
                        else
                        {
                            <li>
                                @Html.ActionLink(i.ToString(), "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "Name" : ViewBag.SortBy, PageNumber = i })
                            </li>
                        }


                    }
                    @if (ViewBag.PageNumber == totalpages)
                    {
                        <li>
                            @Html.ActionLink("Next", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "Name" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber })

                        </li>
                    }
                    else
                    {
                        <li>
                            @Html.ActionLink("Next", "Index", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "Name" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber + 1 })

                        </li>

                    }
                </ul>
            }



        }

    }

</div>

@section scripts
{

    <script>

 function Delete(id) {
            if(confirm('Are You Sure to Delete this Employee Record ?'))
            {
                $.ajax({
                    type: "POST",
                     //url: '@Url.Action("Delete","Employee",new { area="User"})/' + id,
                    url: '/User/Employee/Delete/',
                    data: { id: id },
                    success: function (data) {
                        console.log('success');
                        window.location.href = '/User/Employee/Index/';


                    },
                    error: function (jqXHR, exception) {
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404]';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }
                       // $('#post').html(msg);
                        console.log(msg);
                    }

                });
            }
        }


        function Refreshdata()
        {
            $.ajax({
                    type: "POST",
                    url: '/User/Employee/Index/',
                data: {
                    searchtext: '',
                    SortOrder: 'Desc',
                    SortBy: 'Name',
                    PageNumber:1

                },
                    success: function (data) {

                        alert('Reloaded' + data)
                        window.location.href = data;
                },
                error: function (jqXHR, exception) {
                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.';
                    } else if (jqXHR.status == 404) {
                        msg = 'Requested page not found. [404]';
                    } else if (jqXHR.status == 500) {
                        msg = 'Internal Server Error [500].';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.';
                    } else if (exception === 'timeout') {
                        msg = 'Time out error.';
                    } else if (exception === 'abort') {
                        msg = 'Ajax request aborted.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                    }
                    $('#post').html(msg);
                },

                });

        }
    </script>
}

